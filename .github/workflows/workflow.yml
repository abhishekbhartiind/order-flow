name: OrderFlow CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
on: push

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.9]

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    # - name: Set up Postgres database
    #   run: |
    #     docker run -d \
    #       --name my-postgres-container \
    #       -e POSTGRES_USER=myuser \
    #       -e POSTGRES_PASSWORD=mypassword \
    #       -e POSTGRES_DB=mydatabase \
    #       -p 5432:5432 \
    #       postgres:latest
    - name: Install backend (Python) dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r web/requirements.txt
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install frontend dependencies
      run: |
        cd front
        npm ci
    - name: Run Tests
      run: |
        pytest .
